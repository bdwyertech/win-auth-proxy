2016/06/02 17:04:43 http: panic serving 127.0.0.1:26675: runtime error: invalid memory address or nil pointer dereference
goroutine 28 [running]:
net/http.(*conn).serve.func1(0xc08206f300)
        C:/Go/src/net/http/server.go:1389 +0xc8
panic(0x909d00, 0xc082002080)
        C:/Go/src/runtime/panic.go:426 +0x4f7
github.com/elazarl/goproxy.(*ProxyHttpServer).ServeHTTP(0xc08206eb80, 0x2eb6088, 0xc082c02750, 0xc0828c7dc0)
        c:/sources/go/src/github.com/elazarl/goproxy/proxy.go:127 +0xf4d
net/http.serverHandler.ServeHTTP(0xc08206ec80, 0x2eb6088, 0xc082c02750, 0xc0828c7dc0)
        C:/Go/src/net/http/server.go:2081 +0x1a5
net/http.(*conn).serve(0xc08206f300)
        C:/Go/src/net/http/server.go:1472 +0xf35
created by net/http.(*Server).Serve
        C:/Go/src/net/http/server.go:2137 +0x455

This exception still needs to be handled correctly:
it happens because 
if the client connects to HTTP
and the server responds 301/302 => HTTPS
goproxy will automatically make a CONNECT
and the handler won't be able to detect that it is being called during the response to the CONNECT instead of the first GET